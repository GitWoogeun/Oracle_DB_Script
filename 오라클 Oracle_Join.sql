-- ORACLE JOIN

-- NOTICE가 주인공인 ANSI INNER JOIN
SELECT MEM.NAME, NTC.*
  FROM NOTICE NTC
INNER JOIN MEMBER MEM
     ON NTC.WRITER_ID = MEM.ID;
     
-- NOTICE가 주인공인 ORACLE INNER JOIN
SELECT MEM.NAME, NTC.*
   FROM NOTICE NTC, MEMBER MEM
WHERE NTC.WRITER_ID = MEM.ID;

-- MEMBER가 주인공인 ANSI OUTER JOIN
SELECT MEM.NAME, NTC.*
  FROM MEMBER MEM
LEFT OUTER JOIN NOTICE NTC
ON MEM.ID = NTC.WRITER_ID;

-- MEMBER가 주인공인 ORACLE OUTER JOIN 
-- (+) = NULL값도 포함한다. 
-- 그렇기 때문에 약간 반대되는 느낌이 있다.
SELECT MEM.NAME, NTC.*
  FROM MEMBER MEM, NOTICE NTC
WHERE MEM.ID = NTC.WRITER_ID(+);

-- ANSI FULL OUTER JOIN
SELECT MEM.NAME, NTC.*
  FROM MEMBER MEM
FULL OUTER JOIN NOTICE NTC
     ON MEM.ID = NTC.WRITER_ID;
     
-- ORACLE FULL OUTER JOIN
-- ORACLE은 FULL OUTER JOIN을 지원하지 않는다.
-- 그렇기 때문에 FULL OUTER JOIN을 할 경우
-- ANSI JOIN으로 FULL OUTER JOIN을 해야 한다.
SELECT *
  FROM MEMBER MEM, NOTICE NTC
WHERE MEM.ID(+) = NTC.WRITER_ID(+);

-- CROSS JOIN == 레코드 * 레코드
-- 두 개의 테이블의 레코드의 개수 끼리 X를 하는 경우
-- 사실상 업무상으로는 쓸일이 거의 없다
-- CROSS JOIN인 경우는 관계가 딱히 필요없다.
SELECT * 
  FROM MEMBER MEM
CROSS JOIN NOTICE NTC;

-- ORACLE CROSS JOIN
SELECT *
  FROM MEMBER , NOTICE;